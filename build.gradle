
buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "com.palantir.git-version" version "3.0.0"
    id "signing"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

File localPropertiesFile = project.rootProject.file('local.properties')
Properties localProperties = new Properties()
if (localPropertiesFile.canRead())
    localProperties.load(localPropertiesFile.newDataInputStream())

version = gitVersion()

subprojects.each { subproject -> evaluationDependsOn( subproject.path ) }
jar.dependsOn subprojects.tasks['classes']
jar {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    subprojects.each { subproject ->
        from subproject.sourceSets.main.output
    }
    from "LICENSE"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    classifier = 'sources'
    subprojects.each { subproject ->
        from subproject.sourceSets.main.allSource
    }
    from "LICENSE"
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    classifier = 'javadoc'
    subprojects.each { subproject ->
        from subproject.javadoc.destinationDir
    }
    from "LICENSE"
}

allprojects {
    repositories {
        jcenter()
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    useInMemoryPgpKeys(
        System.getenv("MAVEN_CENTRAL_KEY_ID"),
        System.getenv("MAVEN_CENTRAL_KEY"),
        System.getenv("MAVEN_CENTRAL_KEY_PASSWORD")
    )
    sign(publishing.publications)
}

publishing {
    repositories {
        maven {
            name = "MavenCentral"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = System.getenv("MAVEN_CENTRAL_USERNAME")
                password = System.getenv("MAVEN_CENTRAL_PASSWORD")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId 'com.eidu'
            artifactId 'archive-patcher'
            version gitVersion()

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "archive-patcher"
                description = "Google Archive Patcher (EIDU fork)"
                url = "https://github.com/EIDU/archive-patcher"
                licenses {
                    license {
                        name = "Apache 2.0 License"
                        url = "https://raw.githubusercontent.com/EIDU/archive-patcher/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "berlix"
                        name = "Felix Engelhardt"
                        url = "https://github.com/berlix/"
                    }
                }
                scm {
                    url = "https://github.com/EIDU/archive-patcher"
                    connection = "scm:git:git://github.com/EIDU/archive-patcher.git"
                    developerConnection = "scm:git:ssh://git@github.com/EIDU/archive-patcher.git"
                }
            }
        }
    }
}
