
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0-rc2'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

File localPropertiesFile = project.rootProject.file('local.properties')
Properties localProperties = new Properties()
if (localPropertiesFile.canRead())
    localProperties.load(localPropertiesFile.newDataInputStream())

def gitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = 1.0

subprojects.each { subproject -> evaluationDependsOn( subproject.path ) }
jar.dependsOn subprojects.tasks['classes']
jar {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    subprojects.each { subproject ->
        from subproject.sourceSets.main.output
    }
    from "LICENSE"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    classifier = 'sources'
    subprojects.each { subproject ->
        from subproject.sourceSets.main.allSource
    }
    from "LICENSE"
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    manifest {
        attributes 'Implementation-Title': 'Archive Patcher',
        	'Implementation-Version': version,
            'Implementation-Vendor': 'https://github.com/andrewhayden/archive-patcher'
    }
    baseName = project.name
    classifier = 'javadoc'
    subprojects.each { subproject ->
        from subproject.javadoc.destinationDir
    }
    from "LICENSE"
}

dependencies {
    compile project(':tools')
}

allprojects {
    repositories {
        jcenter()
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/EIDU/archive-patcher")
            credentials {
                username = System.getenv("GITHUB_USER") ?: localProperties.getProperty("githubUser")
                password = System.getenv("GITHUB_TOKEN") ?: localProperties.getProperty("githubToken")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            groupId 'com.eidu'
            artifactId 'archive-patcher'
            version gitHash()
        }
    }
}
